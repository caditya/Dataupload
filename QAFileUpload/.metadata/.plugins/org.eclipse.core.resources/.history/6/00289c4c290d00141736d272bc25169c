package com.follett.connector.controllers;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;

import javax.validation.Valid;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.validation.ObjectError;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.follett.connector.service.productService;
import com.follett.connector.util.DataBlock;

/**
 * Handles requests for the application home page.
 */
@Controller
public class HomeController {
	
	private static final Logger logger = LoggerFactory.getLogger(HomeController.class);
	
	/**
	 * Simply selects the home view to render by returning its name.
	 */
	@RequestMapping(value = {"/home","/"}, method = RequestMethod.GET)
	public String home(Locale locale, Model model) {
		logger.info("Welcome home! The client locale is {}.", locale);
		
		Date date = new Date();
		DateFormat dateFormat = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, locale);
		
		String formattedDate = dateFormat.format(date);
		
		model.addAttribute("serverTime", formattedDate );
		
		return "home";
	}
	
	@RequestMapping(value = "/file", method = RequestMethod.GET)
	public String uploadfile(Locale locale, Model model, DataBlock dataBlock) {
		logger.info("Welcome home! The client locale is {}.", locale);
		model.addAttribute(dataBlock);
		
		Date date = new Date();
		DateFormat dateFormat = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, locale);
		
		String formattedDate = dateFormat.format(date);
		
		model.addAttribute("serverTime", formattedDate );
		
		
		
		return "fileupload";
	}
	
	
	@RequestMapping(value = "/startfile", method = { RequestMethod.GET,
			RequestMethod.POST })
	public String addProduct(ModelMap model,
			@RequestParam("dataFile") MultipartFile file,
			@Valid DataBlock product, BindingResult result) {
		if (result.hasErrors()) {
			
			return "product/addproduct";
		}
		String fileName = "C:/Aditya/test/"
				+ file.getOriginalFilename();
		
		System.out.println("File name" + file.getOriginalFilename());

		if (file.isEmpty()) {
			result.addError(new ObjectError("Data File is required",
					"Image File is required"));
		} else if (!file.isEmpty()) {
			try {

				// BufferedOutputStream bos = null;
				// FileOutputStream fos = null;
				// fos = new FileOutputStream(fileName);
				// bos = new BufferedOutputStream(fos);
				// bos.write(b);

				byte[] bytes = file.getBytes();

				BufferedOutputStream stream = new BufferedOutputStream(
						new FileOutputStream(new File(fileName)));
				stream.write(bytes);
				stream.close();
				product.setProductImageLocation(fileName);
				int productAddResult = productService.addProduct(product);
				if (productAddResult == 1) {
					// model.put("allproductlist",
					// productService.getAllProducts());
					model.put("allproductList", new ArrayList<DataBlock>());
					return "product/addproductresult";
				} else if (productAddResult == 2) {
					result.addError(new ObjectError("duplicateproductid",
							"This product id already exists"));
					return "product/addproduct";
				}

			} catch (IOException e) {
				result.addError(new ObjectError("Failed_to_upload_image_file.",
						"Failed to upload image file. Please try again."));
				return "product/addproduct";
			}
		}
		return "upload";
	}

	
	
}
